%YAML:1.0

# L515 Config

#common parameters
imu_topic: "/camera/imu"
image_topic: "/camera/color/image_raw"

depth_topic: "/camera/aligned_depth_to_color/image_raw"
output_path: "/home/ran/vins_rgbd_output/"

#pointcloud settings
pcl_dist: 10
u_boundary: 10
d_boundary: 10
l_boundary: 40
r_boundary: 40
pcl_min_dist: 0.3
pcl_max_dist: 6
resolution: 0.02

#camera calibration
model_type: PINHOLE
camera_name: camera
image_width: 1280
image_height: 720
  #TODO modify distortion

distortion_parameters:
   k1: 0.163392618298531
   k2: -0.507503688335419
   p1: -0.00113613810390234
   p2: -0.00013459162437357
projection_parameters:
   fx: 906.259765625
   fy: 906.550964355469
   cx: 642.896362304688
   cy: 353.142242431641

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [  0.999943, -0.00932683,   0.0052792,
            0.00945274, 0.999659, -0.0243487,
            -0.0050503, 0.0243972 , 0.99969 ]

#   0.999943        -0.00932683       0.0052792
#   0.00945274       0.999659        -0.0243487
#   -0.0050503        0.0243972        0.99969
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [-0.0120648602023721, 0.00217691715806723, 0.0023775571025908]
# -0.0120648602023721  0.00217691715806723  0.0023775571025908
#feature traker paprameters
max_cnt: 400           # max feature number in feature tracking
min_dist: 17            # min distance between two features
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 0             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.08  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
#for handheld, wheeld
acc_n: 0.1829589017330412          # accelerometer measurement noise standard deviation. #0.2
gyr_n: 0.024480362284765463         # gyroscope measurement noise standard deviation.     #0.05
acc_w: 3.7425273003024506e-05         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 2.5996760318842082e-06       # gyroscope bias random work noise standard deviation.     #4.0e-5

## IMU noise (Use those from VINS-mono)
#IMU.NoiseGyro: 1.7794149940431553e-03 # 3 # 2.44e-4 #1e-3 # rad/s^0.5
#IMU.NoiseAcc: 1.2540381093709233e-02 #2 # 1.47e-3 #1e-2 # m/s^1.5
#IMU.GyroWalk: 3.9583466940523015e-05 # rad/s^1.5
#IMU.AccWalk: 5.0875897222204614e-04 # m/s^2.5
#IMU.Frequency: 200.0

#for tracked applications
#acc_n: 0.5          # accelerometer measurement noise standard deviation. #0.2
#gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05
#acc_w: 0.001         # accelerometer bias random work noise standard deviation.  #0.02
#gyr_w: 2.0e-5       # gyroscope bias random work noise standard deviation.     #4.0e-5


g_norm: 9.805       # gravity magnitude

#loop closure parameters
loop_closure: 1                    # start loop closure
fast_relocalization: 1             # useful in real-time and large project
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/ran/vins_rgbd_output/pose_graph/" # save and load path /home/ran/vins_rgbd_output/

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.000                           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 1                      # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0.033               # unit: s. rolling shutter read out time per frame (from data sheet).

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ
